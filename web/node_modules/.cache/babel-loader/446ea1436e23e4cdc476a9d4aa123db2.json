{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/root/Desktop/issue-tracker-react/src/component/issue/Issues.js\";\nimport React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Issue from '../../model/issue/Issue';\nimport { getIssues } from '../../service/getIssues';\nimport { getIssue } from '../../service/getIssue';\nimport AddIssue from './AddIssue';\nimport './issues.scss';\nexport default class Issues extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async props => {\n      const response = await getIssues().then(res => res.data);\n      this.setState({\n        arr: response,\n        selectedIssue: null\n      });\n    };\n\n    this.arrayEquals = (a, b) => {\n      return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index) => val.id === b[index].id);\n    };\n\n    this.componentDidUpdate = async props => {\n      const response = await getIssues().then(res => res.data);\n\n      if (!this.arrayEquals(response, this.state.arr)) {\n        this.setState({\n          arr: response\n        });\n      }\n    };\n\n    this.showDetailedIssue = id => {\n      let issue = getIssue(id).then(res => res.data); // this.setState({ selectedIssue: issue })\n\n      console.log(issue);\n    };\n\n    this.getIssues = () => {\n      return Array.from(this.state.arr);\n    };\n\n    this.state = {\n      arr: [],\n      selectedIssue: null\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(AddIssue, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"issue-cards col-6\",\n          children: this.getIssues().map(issue => /*#__PURE__*/_jsxDEV(Issue, {\n            onClick: this.showDetailedIssue(issue.id),\n            id: issue.id,\n            title: issue.title,\n            description: issue.description,\n            labels: issue.labels\n          }, issue.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"issue-detail col-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/root/Desktop/issue-tracker-react/src/component/issue/Issues.js"],"names":["React","Container","Row","Issue","getIssues","getIssue","AddIssue","Issues","Component","constructor","props","componentDidMount","response","then","res","data","setState","arr","selectedIssue","arrayEquals","a","b","Array","isArray","length","every","val","index","id","componentDidUpdate","state","showDetailedIssue","issue","console","log","from","bind","render","map","title","description","labels"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport Issue from '../../model/issue/Issue'\nimport { getIssues } from '../../service/getIssues'\nimport { getIssue } from '../../service/getIssue'\nimport AddIssue from './AddIssue'\nimport './issues.scss'\n\nexport default class Issues extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      arr: [],\n      selectedIssue: null\n    }\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.componentDidUpdate = this.componentDidUpdate.bind(this)\n  }\n\n  componentDidMount = async props => {\n    const response = await getIssues().then(res => res.data)\n    this.setState({\n      arr: response,\n      selectedIssue: null\n    })\n  }\n\n  arrayEquals = (a, b) => {\n    return (\n      Array.isArray(a) &&\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every((val, index) => val.id === b[index].id)\n    )\n  }\n\n  componentDidUpdate = async props => {\n    const response = await getIssues().then(res => res.data)\n\n    if (!this.arrayEquals(response, this.state.arr)) {\n      this.setState({\n        arr: response\n      })\n    }\n  }\n  showDetailedIssue = id => {\n    let issue = getIssue(id).then(res => res.data)\n    // this.setState({ selectedIssue: issue })\n    console.log(issue)\n  }\n\n  getIssues = () => {\n    return Array.from(this.state.arr)\n  }\n\n  render () {\n    return (\n      <Container>\n        <Row>\n          <AddIssue />\n          <div className='issue-cards col-6'>\n            {this.getIssues().map(issue => (\n              <Issue\n                onClick={this.showDetailedIssue(issue.id)}\n                key={issue.id}\n                id={issue.id}\n                title={issue.title}\n                description={issue.description}\n                labels={issue.labels}\n              />\n            ))}\n          </div>\n          <div className='issue-detail col-6'></div>\n        </Row>\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}