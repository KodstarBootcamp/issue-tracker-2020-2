{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/root/Desktop/issue-tracker-react/src/component/issue.js\";\nimport React from 'react';\nimport './issue.scss';\nexport class Issue extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addIssues = (issueId, checkValue) => {\n      const oldSelectedIssues = this.state.selectedIssues;\n      oldSelectedIssues.push(issueId);\n      this.setState({\n        selectedIssues: oldSelectedIssues\n      });\n      console.log(this.state.selectedIssues);\n      console.log(checkValue);\n      console.log(issueId);\n    };\n\n    this.state = {\n      selectedIssues: []\n    };\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      description\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"edit-icon\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-danger\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"delete-icon\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                this.addIssues(id, e.target.checked);\n              },\n              type: \"checkbox\",\n              className: \"btn-check\",\n              id: \"btncheck1\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\" \", title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\" \", description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: [\" \", id, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/root/Desktop/issue-tracker-react/src/component/issue.js"],"names":["React","Issue","Component","constructor","props","addIssues","issueId","checkValue","oldSelectedIssues","state","selectedIssues","push","setState","console","log","render","id","title","description","e","target","checked"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAEA,OAAO,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAOpBC,SAPoB,GAOR,CAACC,OAAD,EAAUC,UAAV,KAAyB;AACnC,YAAMC,iBAAiB,GAAG,KAAKC,KAAL,CAAWC,cAArC;AACAF,MAAAA,iBAAiB,CAACG,IAAlB,CAAuBL,OAAvB;AACA,WAAKM,QAAL,CAAc;AACZF,QAAAA,cAAc,EAAEF;AADJ,OAAd;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,cAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,KAhBmB;;AAElB,SAAKG,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAGD;;AAaDK,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA;AAAb,QAA6B,KAAKd,KAAxC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,qBAAhC;AAAA,oCACE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACiC,GADjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGY,GAHZ,eAIE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,uBAAhC;AAAA,oCACE;AAAG,cAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACmC,GADnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAMY,GANZ,eAOE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE;AACE,cAAA,QAAQ,EAAEe,CAAC,IAAI;AACb,qBAAKd,SAAL,CAAeW,EAAf,EAAmBG,CAAC,CAACC,MAAF,CAASC,OAA5B;AACD,eAHH;AAIE,cAAA,IAAI,EAAC,UAJP;AAKE,cAAA,SAAS,EAAC,WALZ;AAME,cAAA,EAAE,EAAC,WANL;AAOE,cAAA,YAAY,EAAC;AAPf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,EAiBS,GAjBT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAmBS,GAnBT,eAoBE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,0BAA6BJ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,EAoB4C,GApB5C,eAqBE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,0BAA2BC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,EAqB+C,GArB/C,eAsBE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA,0BAAsCF,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,EAsBsD,GAtBtD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAwBS,GAxBT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAlDwC","sourcesContent":["import React from 'react'\nimport './issue.scss'\n\nexport class Issue extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedIssues: []\n    }\n  }\n\n  addIssues = (issueId, checkValue) => {\n    const oldSelectedIssues = this.state.selectedIssues;\n    oldSelectedIssues.push(issueId)\n    this.setState({\n      selectedIssues: oldSelectedIssues\n    })\n    console.log(this.state.selectedIssues)\n    console.log(checkValue)\n    console.log(issueId)\n  }\n\n  render () {\n    const { id, title, description } = this.props\n\n    return (\n      <div className='card'>\n        <div className='card-body'>\n          <div className='edit-container'>\n            <button type='button' className='btn btn-sm btn-info'>\n              <i className='edit-icon'> </i>{' '}\n            </button>{' '}\n            <button type='button' className='btn btn-sm btn-danger'>\n              <i className='delete-icon'> </i>{' '}\n            </button>{' '}\n            <div className='select'>\n              <input\n                onChange={e => {\n                  this.addIssues(id, e.target.checked)\n                }}\n                type='checkbox'\n                className='btn-check'\n                id='btncheck1'\n                autoComplete='off'\n              />\n            </div>{' '}\n          </div>{' '}\n          <h5 className='card-title'> {title} </h5>{' '}\n          <p className='card-text'> {description} </p>{' '}\n          <button className='btn btn-primary'> {id} </button>{' '}\n        </div>{' '}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}