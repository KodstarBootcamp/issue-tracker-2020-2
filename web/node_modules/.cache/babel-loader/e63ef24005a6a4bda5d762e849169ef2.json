{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/root/Desktop/issue-tracker-react/src/component/issue/AddIssue.js\";\nimport React from 'react';\nimport { createIssue } from '../../service/createIssue';\nimport './add-issue.scss';\nimport { Button, Modal, Container, Form, InputGroup, FormControl, Badge } from 'react-bootstrap';\nexport default class AddIssue extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormValues = event => {\n      event.preventDefault();\n      const title = event.target.title.value;\n      const description = event.target.description.value;\n      console.log(title);\n      console.log(description);\n      console.log(this.state.labels);\n    };\n\n    this.handleLabel = event => {\n      this.setState({\n        label: event.target.value\n      });\n    };\n\n    this.addLabelToLabels = () => {\n      this.setState({\n        labels: [...this.state.labels, '#' + this.state.label],\n        label: ''\n      });\n    };\n\n    this.removeLabel = labelName => {\n      const oldLabels = this.state.labels;\n      oldLabels.findIndex(labelName);\n      oldLabels.splice(labelName, 1);\n      this.setState({\n        labels: oldLabels\n      });\n    };\n\n    this.flushState = () => {\n      this.setState({\n        title: '',\n        description: '',\n        labels: []\n      });\n    };\n\n    this.state = {\n      title: '',\n      description: '',\n      labels: [],\n      lgShow: false\n    };\n    this.setLgShow = this.setLgShow.bind(this);\n  }\n\n  // addIssue = () => {\n  //   createIssue()\n  // }\n  setLgShow(lgShow) {\n    this.setState({\n      lgShow: lgShow\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"\",\n        className: \"add-issue-btn\",\n        onClick: () => {\n          this.setLgShow(true);\n        },\n        children: \"Add A New Issue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"lg\",\n        show: this.state.lgShow,\n        onHide: () => {\n          this.setLgShow(false);\n        },\n        \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"example-modal-sizes-title-lg\",\n            children: \"Add A New Issue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleFormValues,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"newIssue\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Title : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"title\",\n                placeholder: \"Ex. 'Issue tracker 1' \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"description-label\",\n                children: [\"Description :\", ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"description-text-area\",\n                as: \"textarea\",\n                name: \"description\",\n                rows: 3,\n                placeholder: \"Ex. 'Issue tracker 1 Description' \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"add-label\",\n                children: \"Labels : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"added-labels-container\",\n                children: this.state.labels.map(label => /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"added-labels\",\n                  variant: \"primary\",\n                  size: \"sm\",\n                  disabled: true,\n                  children: [label, ' ', /*#__PURE__*/_jsxDEV(Badge, {\n                    pill: true,\n                    variant: \"danger\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"delete-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  \"aria-label\": \"label\",\n                  type: \"text\",\n                  name: \"label\",\n                  placeholder: \"Bug, Front-End, ... \",\n                  onChange: this.handleLabel,\n                  value: this.state.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    id: \"add-label-btn\",\n                    className: \"add-label-btn\",\n                    variant: \"success\",\n                    type: \"button\",\n                    onClick: this.addLabelToLabels,\n                    children: \"Add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Container, {\n                className: \"create-btn-group\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"create-btn\",\n                  className: \"create-btn\",\n                  variant: \"primary\",\n                  type: \"submit\",\n                  block: true,\n                  onClick: () => {\n                    this.setLgShow(false);\n                    this.flushState();\n                  },\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"cancel-btn\",\n                  className: \"cancel-btn\",\n                  variant: \"danger\",\n                  type: \"cancel\",\n                  block: true,\n                  onClick: () => {\n                    this.setLgShow(false);\n                    this.flushState();\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/root/Desktop/issue-tracker-react/src/component/issue/AddIssue.js"],"names":["React","createIssue","Button","Modal","Container","Form","InputGroup","FormControl","Badge","AddIssue","Component","constructor","props","handleFormValues","event","preventDefault","title","target","value","description","console","log","state","labels","handleLabel","setState","label","addLabelToLabels","removeLabel","labelName","oldLabels","findIndex","splice","flushState","lgShow","setLgShow","bind","render","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { createIssue } from '../../service/createIssue'\nimport './add-issue.scss'\nimport {\n  Button,\n  Modal,\n  Container,\n  Form,\n  InputGroup,\n  FormControl,\n  Badge\n} from 'react-bootstrap'\n\nexport default class AddIssue extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      title: '',\n      description: '',\n      labels: [],\n      lgShow: false\n    }\n\n    this.setLgShow = this.setLgShow.bind(this)\n  }\n\n  handleFormValues = event => {\n    event.preventDefault()\n    const title = event.target.title.value\n    const description = event.target.description.value\n    console.log(title)\n    console.log(description)\n    console.log(this.state.labels)\n  }\n\n  handleLabel = event => {\n    this.setState({ label: event.target.value })\n  }\n\n  addLabelToLabels = () => {\n    this.setState({\n      labels: [...this.state.labels, '#' + this.state.label],\n      label: ''\n    })\n  }\n  // addIssue = () => {\n  //   createIssue()\n  // }\n\n  setLgShow (lgShow) {\n    this.setState({\n      lgShow: lgShow\n    })\n  }\n  removeLabel = labelName => {\n    const oldLabels = this.state.labels\n    oldLabels.findIndex(labelName)\n    oldLabels.splice(labelName, 1)\n    this.setState({ labels: oldLabels })\n  }\n\n  flushState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      labels: []\n    })\n  }\n\n  render () {\n    return (\n      <Container>\n        <Button\n          variant=''\n          className='add-issue-btn'\n          onClick={() => {\n            this.setLgShow(true)\n          }}\n        >\n          Add A New Issue\n        </Button>\n        <Modal\n          size='lg'\n          show={this.state.lgShow}\n          onHide={() => {\n            this.setLgShow(false)\n          }}\n          aria-labelledby='example-modal-sizes-title-lg'\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id='example-modal-sizes-title-lg'>\n              Add A New Issue\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={this.handleFormValues}>\n              <Form.Group controlId='newIssue'>\n                <Form.Label>Title : </Form.Label>\n                <Form.Control\n                  type='text'\n                  name='title'\n                  placeholder=\"Ex. 'Issue tracker 1' \"\n                ></Form.Control>\n                <Form.Label className='description-label'>\n                  Description :{' '}\n                </Form.Label>\n                <Form.Control\n                  className='description-text-area'\n                  as='textarea'\n                  name='description'\n                  rows={3}\n                  placeholder=\"Ex. 'Issue tracker 1 Description' \"\n                ></Form.Control>\n                <Form.Label className='add-label'>Labels : </Form.Label>\n                <div className='added-labels-container'>\n                  {this.state.labels.map(label => (\n                    <Button className='added-labels' variant='primary' size=\"sm\" disabled>\n                      {label}{' '}\n                      <Badge pill variant='danger'>\n                        <i className='delete-icon'></i>\n                      </Badge>\n                    </Button>\n                  ))}\n                </div>\n                <InputGroup className='mb-3'>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>#</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    aria-label='label'\n                    type='text'\n                    name='label'\n                    placeholder='Bug, Front-End, ... '\n                    onChange={this.handleLabel}\n                    value={this.state.label}\n                  />\n                  <InputGroup.Append>\n                    <Button\n                      id='add-label-btn'\n                      className='add-label-btn'\n                      variant='success'\n                      type='button'\n                      onClick={this.addLabelToLabels}\n                    >\n                      Add\n                    </Button>\n                  </InputGroup.Append>\n                </InputGroup>\n                <Container className='create-btn-group'>\n                  <Button\n                    id='create-btn'\n                    className='create-btn'\n                    variant='primary'\n                    type='submit'\n                    block\n                    onClick={() => {\n                      this.setLgShow(false)\n                      this.flushState()\n                    }}\n                  >\n                    Create\n                  </Button>\n                  <Button\n                    id='cancel-btn'\n                    className='cancel-btn'\n                    variant='danger'\n                    type='cancel'\n                    block\n                    onClick={() => {\n                      this.setLgShow(false)\n                      this.flushState()\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </Container>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}