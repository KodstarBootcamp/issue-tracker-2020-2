{"ast":null,"code":"import axios from 'axios';\nimport { getIssues } from './getIssues';\nexport const getFilteredIssues = async searchFilter => {\n  const title_search_url = 'http://localhost:8080/issues/search/title/';\n  const description_search_url = 'http://localhost:8080/issues/search/description/';\n  const label_search_url = 'http://localhost:8080/issues/search/label/';\n  let filterKeyword = searchFilter.slice(searchFilter.indexOf(':') + 1).replace(/\\s/gi, '');\n  let keyword = searchFilter.slice(0, searchFilter.indexOf(':')).replace(/\\s/gi, '');\n\n  if (searchFilter === '') {\n    return await getIssues();\n  } else if (searchFilter.indexOf(':') === -1 || keyword === 'title') {\n    return await axios.get(title_search_url + filterKeyword);\n  } else if (searchFilter.indexOf(':') !== -1 && keyword === 'description') {\n    return await axios.get(description_search_url + filterKeyword);\n  } else if (searchFilter.indexOf(':') !== -1 && keyword === 'label') {\n    return await axios.get(label_search_url + filterKeyword);\n  }\n};","map":{"version":3,"sources":["/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getFilteredIssues.js"],"names":["axios","getIssues","getFilteredIssues","searchFilter","title_search_url","description_search_url","label_search_url","filterKeyword","slice","indexOf","replace","keyword","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAMC,YAAN,IAAsB;AACrD,QAAMC,gBAAgB,GAAG,4CAAzB;AACA,QAAMC,sBAAsB,GAC1B,kDADF;AAEA,QAAMC,gBAAgB,GAAG,4CAAzB;AAEA,MAAIC,aAAa,GAAGJ,YAAY,CAC7BK,KADiB,CACXL,YAAY,CAACM,OAAb,CAAqB,GAArB,IAA4B,CADjB,EAEjBC,OAFiB,CAET,MAFS,EAED,EAFC,CAApB;AAIA,MAAIC,OAAO,GAAGR,YAAY,CACvBK,KADW,CACL,CADK,EACFL,YAAY,CAACM,OAAb,CAAqB,GAArB,CADE,EAEXC,OAFW,CAEH,MAFG,EAEK,EAFL,CAAd;;AAIA,MAAIP,YAAY,KAAK,EAArB,EAAyB;AACvB,WAAO,MAAMF,SAAS,EAAtB;AACD,GAFD,MAEO,IAAIE,YAAY,CAACM,OAAb,CAAqB,GAArB,MAA8B,CAAC,CAA/B,IAAoCE,OAAO,KAAK,OAApD,EAA6D;AAClE,WAAO,MAAMX,KAAK,CAACY,GAAN,CAAUR,gBAAgB,GAAGG,aAA7B,CAAb;AACD,GAFM,MAEA,IAAIJ,YAAY,CAACM,OAAb,CAAqB,GAArB,MAA8B,CAAC,CAA/B,IAAoCE,OAAO,KAAK,aAApD,EAAmE;AACxE,WAAO,MAAMX,KAAK,CAACY,GAAN,CAAUP,sBAAsB,GAAGE,aAAnC,CAAb;AACD,GAFM,MAEA,IAAIJ,YAAY,CAACM,OAAb,CAAqB,GAArB,MAA8B,CAAC,CAA/B,IAAoCE,OAAO,KAAK,OAApD,EAA6D;AAClE,WAAO,MAAMX,KAAK,CAACY,GAAN,CAAUN,gBAAgB,GAAGC,aAA7B,CAAb;AACD;AACF,CAvBM","sourcesContent":["import axios from 'axios'\nimport { getIssues } from './getIssues'\n\nexport const getFilteredIssues = async searchFilter => {\n  const title_search_url = 'http://localhost:8080/issues/search/title/'\n  const description_search_url =\n    'http://localhost:8080/issues/search/description/'\n  const label_search_url = 'http://localhost:8080/issues/search/label/'\n\n  let filterKeyword = searchFilter\n    .slice(searchFilter.indexOf(':') + 1)\n    .replace(/\\s/gi, '')\n\n  let keyword = searchFilter\n    .slice(0, searchFilter.indexOf(':'))\n    .replace(/\\s/gi, '')\n\n  if (searchFilter === '') {\n    return await getIssues()\n  } else if (searchFilter.indexOf(':') === -1 || keyword === 'title') {\n    return await axios.get(title_search_url + filterKeyword)\n  } else if (searchFilter.indexOf(':') !== -1 && keyword === 'description') {\n    return await axios.get(description_search_url + filterKeyword)\n  } else if (searchFilter.indexOf(':') !== -1 && keyword === 'label') {\n    return await axios.get(label_search_url + filterKeyword)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}