{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/root/Desktop/issue-tracker-react/src/model/issue/Issue.js\";\nimport React from 'react';\nimport './issue.scss';\nimport { deleteIssue } from '../../service/deleteIssue';\nimport { editIssue } from '../../service/editIssue';\nimport { Card, Button, Form, Col, Badge, Modal, InputGroup, FormControl, Container } from 'react-bootstrap';\nexport default class Issue extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormValues = event => {\n      event.preventDefault();\n      const title = event.target.title.value;\n      const description = event.target.description.value; // const labels = [this.props.labels, ...this.state.labels]\n\n      this.editIssue(this.props.id, title, description, this.props.label);\n      this.setLgShow(false);\n      this.flushState();\n    };\n\n    this.handleLabel = event => {\n      this.setState({\n        label: event.target.value\n      });\n    };\n\n    this.addLabelToLabels = () => {\n      this.setState({\n        labels: [...this.state.labels, '#' + this.state.label.toLowerCase()],\n        label: ''\n      });\n    };\n\n    this.editIssue = async (id, title, description, labels) => {\n      await editIssue(id, title, description, labels);\n    };\n\n    this.removeLabel = labelName => {\n      const oldLabels = this.state.labels;\n      let index = oldLabels.indexOf(labelName);\n      oldLabels.splice(index, 1);\n      this.setState({\n        labels: oldLabels\n      });\n    };\n\n    this.flushState = () => {\n      this.setState({\n        title: '',\n        description: '',\n        labels: []\n      });\n    };\n\n    this.state = {\n      title: '',\n      description: '',\n      labels: [],\n      lgShow: false\n    };\n    this.setLgShow = this.setLgShow.bind(this);\n  }\n\n  setLgShow(lgShow) {\n    this.setState({\n      lgShow: lgShow\n    });\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      description,\n      labels,\n      selectedIssue\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Col, {\n      sm: {\n        span: 12\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '30rem'\n        },\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"click-mask\",\n          onClick: () => {\n            selectedIssue(id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-container\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              size: \"sm\",\n              onClick: () => {\n                this.setLgShow(true);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"edit-icon\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Modal, {\n              size: \"lg\",\n              show: this.state.lgShow,\n              onHide: () => {\n                this.setLgShow(false);\n              },\n              \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                closeButton: true,\n                children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                  id: \"example-modal-sizes-title-lg\",\n                  children: \"Edit Issues\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: this.handleFormValues,\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"newIssue\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Title : \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      name: \"title\",\n                      placeholder: title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                      className: \"description-label\",\n                      children: [\"Description :\", ' ']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      className: \"description-text-area\",\n                      as: \"textarea\",\n                      name: \"description\",\n                      rows: 3,\n                      placeholder: description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                      className: \"add-label\",\n                      children: \"Labels : \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"added-labels-container\",\n                      children: [labels.map((label, i) => /*#__PURE__*/_jsxDEV(Badge, {\n                        className: \"added-labels\",\n                        variant: \"primary\",\n                        onClick: () => this.removeLabel(label),\n                        children: label\n                      }, i++, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 27\n                      }, this)), ' ']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        visibility: this.state.labels.length > 0 ? 'visible' : 'hidden'\n                      },\n                      className: \"remove-message\",\n                      children: \"(on click to remove)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                          children: \"#\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        \"aria-label\": \"label\",\n                        type: \"text\",\n                        name: \"label\",\n                        placeholder: \"Bug, Front-End, ... \",\n                        onChange: this.handleLabel,\n                        value: this.state.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          id: \"add-label-btn\",\n                          className: \"add-label-btn\",\n                          variant: \"success\",\n                          type: \"button\",\n                          onClick: this.addLabelToLabels,\n                          children: \"Add\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 164,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Container, {\n                      className: \"create-btn-group\",\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        id: \"create-btn\",\n                        className: \"create-btn\",\n                        variant: \"primary\",\n                        type: \"submit\",\n                        block: true,\n                        children: \"Save\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        id: \"cancel-btn\",\n                        className: \"cancel-btn\",\n                        variant: \"danger\",\n                        type: \"cancel\",\n                        block: true,\n                        onClick: () => {\n                          this.setLgShow(false);\n                          this.flushState();\n                        },\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              type: \"button\",\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"delete-icon\",\n                onClick: () => {\n                  deleteIssue(id);\n                },\n                children: ' '\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              id: \"btncheck1\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\" \", title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Card.Text, {\n            className: \"description-text\",\n            children: [\" \", description, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), labels.map(item => /*#__PURE__*/_jsxDEV(Badge, {\n            className: \"label\",\n            variant: \"primary\",\n            children: [\"#\", item.labelName]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/root/Desktop/issue-tracker-react/src/model/issue/Issue.js"],"names":["React","deleteIssue","editIssue","Card","Button","Form","Col","Badge","Modal","InputGroup","FormControl","Container","Issue","Component","constructor","props","handleFormValues","event","preventDefault","title","target","value","description","id","label","setLgShow","flushState","handleLabel","setState","addLabelToLabels","labels","state","toLowerCase","removeLabel","labelName","oldLabels","index","indexOf","splice","lgShow","bind","render","selectedIssue","span","width","map","i","visibility","length","item"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './issue.scss'\nimport { deleteIssue } from '../../service/deleteIssue'\nimport { editIssue } from '../../service/editIssue'\nimport {\n  Card,\n  Button,\n  Form,\n  Col,\n  Badge,\n  Modal,\n  InputGroup,\n  FormControl,\n  Container\n} from 'react-bootstrap'\n\nexport default class Issue extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      title: '',\n      description: '',\n      labels: [],\n      lgShow: false\n    }\n\n    this.setLgShow = this.setLgShow.bind(this)\n  }\n\n  handleFormValues = event => {\n    event.preventDefault()\n    const title = event.target.title.value\n    const description = event.target.description.value\n    // const labels = [this.props.labels, ...this.state.labels]\n    this.editIssue(this.props.id, title, description, this.props.label)\n    this.setLgShow(false)\n    this.flushState()\n  }\n\n  handleLabel = event => {\n    this.setState({ label: event.target.value })\n  }\n\n  addLabelToLabels = () => {\n    this.setState({\n      labels: [...this.state.labels, '#' + this.state.label.toLowerCase()],\n      label: ''\n    })\n  }\n  editIssue = async (id, title, description, labels) => {\n    await editIssue(id, title, description, labels)\n  }\n\n  removeLabel = labelName => {\n    const oldLabels = this.state.labels\n    let index = oldLabels.indexOf(labelName)\n    oldLabels.splice(index, 1)\n    this.setState({ labels: oldLabels })\n  }\n\n  flushState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      labels: []\n    })\n  }\n\n  setLgShow (lgShow) {\n    this.setState({\n      lgShow: lgShow\n    })\n  }\n  render () {\n    const { id, title, description, labels, selectedIssue } = this.props\n\n    return (\n      <Col sm={{ span: 12 }}>\n        <Card style={{ width: '30rem' }} className='card'>\n          <div\n            className='click-mask'\n            onClick={() => {\n              selectedIssue(id)\n            }}\n          ></div>\n          <Card.Body>\n            <div className='edit-container'>\n              <Button\n                type='button'\n                size='sm'\n                onClick={() => {\n                  this.setLgShow(true)\n                }}\n              >\n                <i className='edit-icon'> </i>{' '}\n              </Button>{' '}\n              <Modal\n                size='lg'\n                show={this.state.lgShow}\n                onHide={() => {\n                  this.setLgShow(false)\n                }}\n                aria-labelledby='example-modal-sizes-title-lg'\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title id='example-modal-sizes-title-lg'>\n                    Edit Issues\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <Form onSubmit={this.handleFormValues}>\n                    <Form.Group controlId='newIssue'>\n                      <Form.Label>Title : </Form.Label>\n                      <Form.Control\n                        type='text'\n                        name='title'\n                        placeholder={title}\n                      ></Form.Control>\n                      <Form.Label className='description-label'>\n                        Description :{' '}\n                      </Form.Label>\n                      <Form.Control\n                        className='description-text-area'\n                        as='textarea'\n                        name='description'\n                        rows={3}\n                        placeholder={description}\n                      ></Form.Control>\n                      <Form.Label className='add-label'>Labels : </Form.Label>\n                      <div className='added-labels-container'>\n                        {labels.map((label, i) => (\n                          <Badge\n                            key={i++}\n                            className='added-labels'\n                            variant='primary'\n                            onClick={() => this.removeLabel(label)}\n                          >\n                            {label}\n                          </Badge>\n                        ))}{' '}\n                      </div>\n                      <span\n                        style={{\n                          visibility:\n                            this.state.labels.length > 0 ? 'visible' : 'hidden'\n                        }}\n                        className='remove-message'\n                      >\n                        (on click to remove)\n                      </span>\n                      <InputGroup className='mb-3'>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>#</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                          aria-label='label'\n                          type='text'\n                          name='label'\n                          placeholder='Bug, Front-End, ... '\n                          onChange={this.handleLabel}\n                          value={this.state.label}\n                        />\n                        <InputGroup.Append>\n                          <Button\n                            id='add-label-btn'\n                            className='add-label-btn'\n                            variant='success'\n                            type='button'\n                            onClick={this.addLabelToLabels}\n                          >\n                            Add\n                          </Button>\n                        </InputGroup.Append>\n                      </InputGroup>\n                      <Container className='create-btn-group'>\n                        <Button\n                          id='create-btn'\n                          className='create-btn'\n                          variant='primary'\n                          type='submit'\n                          block\n                        >\n                          Save\n                        </Button>\n                        <Button\n                          id='cancel-btn'\n                          className='cancel-btn'\n                          variant='danger'\n                          type='cancel'\n                          block\n                          onClick={() => {\n                            this.setLgShow(false)\n                            this.flushState()\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                      </Container>\n                    </Form.Group>\n                  </Form>\n                </Modal.Body>\n              </Modal>\n              <Button variant='danger' type='button' size='sm'>\n                <i\n                  className='delete-icon'\n                  onClick={() => {\n                    deleteIssue(id)\n                  }}\n                >\n                  {' '}\n                </i>{' '}\n              </Button>{' '}\n              <Form.Check type='checkbox' id='btncheck1' autoComplete='off' />\n            </div>{' '}\n            <Card.Title> {title} </Card.Title>{' '}\n            <Card.Text className='description-text'> {description} </Card.Text>\n            {labels.map(item => (\n              <Badge className='label' key={item.id} variant='primary'>\n                #{item.labelName}\n              </Badge>\n            ))}\n          </Card.Body>{' '}\n        </Card>\n      </Col>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}