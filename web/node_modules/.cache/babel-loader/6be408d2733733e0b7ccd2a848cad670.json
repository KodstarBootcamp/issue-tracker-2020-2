{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/Issues.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Navbar, Nav, Dropdown } from 'react-bootstrap';\nimport { getLabels } from '../../service/getLabels';\nimport './scss/issues.scss';\nexport default function Issues() {\n  _s();\n\n  const [labels, setSearch] = useState([]);\n\n  var _ = require('lodash');\n\n  const fetchLabels = () => {\n    let labelResponse = getLabels().then(res => {\n      return res.data;\n    });\n\n    if (labels !== labelResponse) {\n      console.log(true); //setSearch(Array.from(labelResponse))\n    }\n  }; //useEffect(()=>{\n  //   fetchLabels()\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"issue-container\",\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      collapseOnSelect: true,\n      expand: \"lg\",\n      bg: \"dark\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"responsive-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"responsive-navbar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          className: \"mr-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              id: \"dropdown-basic\",\n              variant: \"outline-success\",\n              children: \"Label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              className: \"dropdown-container\",\n              children: [/*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"type something..\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), labels.map(label => {\n                return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  href: \"\",\n                  style: {\n                    background: label.labelColor\n                  },\n                  children: label.labelName\n                }, label.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Issues, \"+qqJiesYrrjP8V9SyAYXW/yNoOI=\");\n\n_c = Issues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Issues\");","map":{"version":3,"sources":["/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/Issues.js"],"names":["React","useState","useEffect","Container","Form","Navbar","Nav","Dropdown","getLabels","Issues","labels","setSearch","_","require","fetchLabels","labelResponse","then","res","data","console","log","map","label","background","labelColor","labelName","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,QAAvC,QAAuD,iBAAvD;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAO,oBAAP;AAEA,eAAe,SAASC,MAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AACA,MAAIW,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,aAAa,GAAGP,SAAS,GAAGQ,IAAZ,CAAiBC,GAAG,IAAI;AAC1C,aAAOA,GAAG,CAACC,IAAX;AACD,KAFmB,CAApB;;AAGA,QAAIR,MAAM,KAAKK,aAAf,EAA8B;AAC5BI,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAD4B,CAE5B;AACD;AACF,GARD,CAJgC,CAchC;AACA;AACA;;;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,iBAArB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,gBAAgB,MAAxB;AAAyB,MAAA,MAAM,EAAC,IAAhC;AAAqC,MAAA,EAAE,EAAC,MAAxC;AAA+C,MAAA,OAAO,EAAC,MAAvD;AAAA,8BACE,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD,CAAQ,MAAR;AAAe,yBAAc;AAA7B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD,CAAQ,QAAR;AAAiB,QAAA,EAAE,EAAC,uBAApB;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,QAAD,CAAU,MAAV;AAAiB,cAAA,EAAE,EAAC,gBAApB;AAAqC,cAAA,OAAO,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,QAAD,CAAU,IAAV;AAAe,cAAA,SAAS,EAAC,oBAAzB;AAAA,sCACE,QAAC,IAAD;AAAA,uCACE,QAAC,IAAD,CAAM,OAAN;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,EAOGV,MAAM,CAACW,GAAP,CAAWC,KAAK,IAAI;AACnB,oCACE,QAAC,QAAD,CAAU,IAAV;AACE,kBAAA,IAAI,EAAC,EADP;AAGE,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAED,KAAK,CAACE;AAApB,mBAHT;AAAA,4BAKGF,KAAK,CAACG;AALT,mBAEOH,KAAK,CAACI,EAFb;AAAA;AAAA;AAAA;AAAA,wBADF;AASD,eAVA,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAzDuBjB,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Form, Navbar, Nav, Dropdown } from 'react-bootstrap'\nimport { getLabels } from '../../service/getLabels'\n\nimport './scss/issues.scss'\n\nexport default function Issues () {\n  const [labels, setSearch] = useState([])\n  var _ = require('lodash')\n\n  const fetchLabels = () => {\n    let labelResponse = getLabels().then(res => {\n      return res.data\n    })\n    if (labels !== labelResponse) {\n      console.log(true)\n      //setSearch(Array.from(labelResponse))\n    }\n  }\n\n  //useEffect(()=>{\n  //   fetchLabels()\n  // })\n\n  return (\n    <Container className='issue-container'>\n      <Navbar collapseOnSelect expand='lg' bg='dark' variant='dark'>\n        <Form>\n          <Form.Check></Form.Check>\n        </Form>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse id='responsive-navbar-nav'>\n          <Nav className='mr-auto'></Nav>\n          <Nav>\n            <Dropdown>\n              <Dropdown.Toggle id='dropdown-basic' variant='outline-success'>\n                Label\n              </Dropdown.Toggle>\n              <Dropdown.Menu className='dropdown-container'>\n                <Form>\n                  <Form.Control\n                    type='text'\n                    placeholder='type something..'\n                  ></Form.Control>\n                </Form>\n                {labels.map(label => {\n                  return (\n                    <Dropdown.Item\n                      href=''\n                      key={label.id}\n                      style={{ background: label.labelColor }}\n                    >\n                      {label.labelName}\n                    </Dropdown.Item>\n                  )\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}