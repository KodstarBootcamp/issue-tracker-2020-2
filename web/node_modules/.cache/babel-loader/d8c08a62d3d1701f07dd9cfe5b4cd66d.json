{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/root/Desktop/issue-tracker-react/src/component/label/Labels.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // The forwardRef is important!!\n// Dropdown needs access to the DOM node in order to position the Menu\n\nconst CustomToggle = /*#__PURE__*/React.forwardRef(_c = ({\n  children,\n  onClick\n}, ref) => /*#__PURE__*/_jsxDEV(\"a\", {\n  href: \"\",\n  ref: ref,\n  onClick: e => {\n    e.preventDefault();\n    onClick(e);\n  },\n  children: [children, \"\\u25BC\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this)); // forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\n\n_c2 = CustomToggle;\nconst CustomMenu = /*#__PURE__*/React.forwardRef(_c3 = _s(({\n  children,\n  style,\n  className,\n  'aria-labelledby': labeledBy\n}, ref) => {\n  _s();\n\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: style,\n    className: className,\n    \"aria-labelledby\": labeledBy,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      autoFocus: true,\n      className: \"mx-3 my-2 w-auto\",\n      placeholder: \"Type to filter...\",\n      onChange: e => setValue(e.target.value),\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}, \"A2PXPeq8TepW328gUMM4+o8Xryo=\"));\n_c4 = CustomMenu;\nrender( /*#__PURE__*/_jsxDEV(Dropdown, {\n  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n    as: CustomToggle,\n    id: \"dropdown-custom-components\",\n    children: \"Custom toggle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n    as: CustomMenu,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      eventKey: \"1\",\n      children: \"Red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      eventKey: \"2\",\n      children: \"Blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      eventKey: \"3\",\n      active: true,\n      children: \"Orange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      eventKey: \"1\",\n      children: \"Red-Orange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 5\n}, this));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomToggle$React.forwardRef\");\n$RefreshReg$(_c2, \"CustomToggle\");\n$RefreshReg$(_c3, \"CustomMenu$React.forwardRef\");\n$RefreshReg$(_c4, \"CustomMenu\");","map":{"version":3,"sources":["/root/Desktop/issue-tracker-react/src/component/label/Labels.js"],"names":["React","CustomToggle","forwardRef","children","onClick","ref","e","preventDefault","CustomMenu","style","className","labeledBy","value","setValue","useState","target","Children","toArray","filter","child","props","toLowerCase","startsWith","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,MAAMC,YAAY,gBAAGD,KAAK,CAACE,UAAN,MAAiB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,EAAwBC,GAAxB,kBAClC;AACE,EAAA,IAAI,EAAC,EADP;AAEE,EAAA,GAAG,EAAEA,GAFP;AAGE,EAAA,OAAO,EAAGC,CAAD,IAAO;AACdA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,CAACE,CAAD,CAAP;AACD,GANH;AAAA,aAQGH,QARH;AAAA;AAAA;AAAA;AAAA;AAAA,QADiB,CAArB,C,CAcE;AACA;;MAfIF,Y;AAgBJ,MAAMO,UAAU,gBAAGR,KAAK,CAACE,UAAN,UACjB,CAAC;AAAEC,EAAAA,QAAF;AAAYM,EAAAA,KAAZ;AAAmBC,EAAAA,SAAnB;AAA8B,qBAAmBC;AAAjD,CAAD,EAA+DN,GAA/D,KAAuE;AAAA;;AACrE,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACE;AACE,IAAA,GAAG,EAAET,GADP;AAEE,IAAA,KAAK,EAAEI,KAFT;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,uBAAiBC,SAJnB;AAAA,4BAME,QAAC,WAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,WAAW,EAAC,mBAHd;AAIE,MAAA,QAAQ,EAAGL,CAAD,IAAOO,QAAQ,CAACP,CAAC,CAACS,MAAF,CAASH,KAAV,CAJ3B;AAKE,MAAA,KAAK,EAAEA;AALT;AAAA;AAAA;AAAA;AAAA,YANF,eAaE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,gBACGZ,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuBd,QAAvB,EAAiCe,MAAjC,CACEC,KAAD,IACE,CAACP,KAAD,IAAUO,KAAK,CAACC,KAAN,CAAYjB,QAAZ,CAAqBkB,WAArB,GAAmCC,UAAnC,CAA8CV,KAA9C,CAFb;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1BgB,kCAAnB;MAAMJ,U;AA6BNe,MAAM,eACJ,QAAC,QAAD;AAAA,0BACE,QAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,EAAE,EAAEtB,YAArB;AAAmC,IAAA,EAAE,EAAC,4BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAKE,QAAC,QAAD,CAAU,IAAV;AAAe,IAAA,EAAE,EAAEO,UAAnB;AAAA,4BACE,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,GAAxB;AAA4B,MAAA,MAAM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAAN","sourcesContent":["import React from 'react'\n\n// The forwardRef is important!!\n// Dropdown needs access to the DOM node in order to position the Menu\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n    <a\n      href=\"\"\n      ref={ref}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick(e);\n      }}\n    >\n      {children}\n      &#x25bc;\n    </a>\n  ));\n  \n  // forwardRef again here!\n  // Dropdown needs access to the DOM of the Menu to measure it\n  const CustomMenu = React.forwardRef(\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n      const [value, setValue] = useState('');\n  \n      return (\n        <div\n          ref={ref}\n          style={style}\n          className={className}\n          aria-labelledby={labeledBy}\n        >\n          <FormControl\n            autoFocus\n            className=\"mx-3 my-2 w-auto\"\n            placeholder=\"Type to filter...\"\n            onChange={(e) => setValue(e.target.value)}\n            value={value}\n          />\n          <ul className=\"list-unstyled\">\n            {React.Children.toArray(children).filter(\n              (child) =>\n                !value || child.props.children.toLowerCase().startsWith(value),\n            )}\n          </ul>\n        </div>\n      );\n    },\n  );\n  \n  render(\n    <Dropdown>\n      <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n        Custom toggle\n      </Dropdown.Toggle>\n  \n      <Dropdown.Menu as={CustomMenu}>\n        <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\" active>\n          Orange\n        </Dropdown.Item>\n        <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>,\n  );"]},"metadata":{},"sourceType":"module"}