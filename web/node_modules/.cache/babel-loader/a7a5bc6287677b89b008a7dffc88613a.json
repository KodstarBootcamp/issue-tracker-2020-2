{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/root/Desktop/issue-tracker-react/src/service/getIssues.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Issue } from '../component/issue';\nexport default class Issues extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addIssues = (issueId, checkValue) => {\n      const oldSelectedIssues = this.state.selectedIssues;\n      oldSelectedIssues.push(issueId);\n      this.setState({\n        selectedIssues: oldSelectedIssues\n      });\n      console.log(this.state.selectedIssues);\n      console.log(checkValue);\n      console.log(issueId);\n    };\n\n    this.state = {\n      arr: [],\n      selectedIssues: []\n    };\n    this.getIssueList = this.getIssueList.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.getIssueList);\n  }\n\n  async getIssueList() {\n    await axios.get('https://issue-tracker-spring-boot.herokuapp.com/issues').then(issues => {\n      this.setState({\n        arr: issues.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"row\",\n      children: this.state.arr.map(issue => /*#__PURE__*/_jsxDEV(Issue, {\n        id: issue.id,\n        title: issue.title,\n        description: issue.description\n      }, issue.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/root/Desktop/issue-tracker-react/src/service/getIssues.js"],"names":["React","axios","Issue","Issues","Component","constructor","props","addIssues","issueId","checkValue","oldSelectedIssues","state","selectedIssues","push","setState","console","log","arr","getIssueList","bind","componentDidMount","window","addEventListener","get","then","issues","data","catch","error","render","map","issue","id","title","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SA0BpBC,SA1BoB,GA0BR,CAACC,OAAD,EAAUC,UAAV,KAAyB;AACnC,YAAMC,iBAAiB,GAAG,KAAKC,KAAL,CAAWC,cAArC;AACAF,MAAAA,iBAAiB,CAACG,IAAlB,CAAuBL,OAAvB;AAEA,WAAKM,QAAL,CAAc;AACZF,QAAAA,cAAc,EAAEF;AADJ,OAAd;AAIAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,cAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,KArCmB;;AAElB,SAAKG,KAAL,GAAa;AACXM,MAAAA,GAAG,EAAE,EADM;AAEXL,MAAAA,cAAc,EAAE;AAFL,KAAb;AAIA,SAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,KAAKJ,YAArC;AACD;;AAED,QAAMA,YAAN,GAAsB;AACpB,UAAMjB,KAAK,CACRsB,GADG,CACC,wDADD,EAEHC,IAFG,CAEEC,MAAM,IAAI;AACd,WAAKX,QAAL,CAAc;AACZG,QAAAA,GAAG,EAAEQ,MAAM,CAACC;AADA,OAAd;AAGD,KANG,EAOHC,KAPG,CAOGC,KAAK,IAAI;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,KATG,CAAN;AAUD;;AAeDC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA,gBACG,KAAKlB,KAAL,CAAWM,GAAX,CAAea,GAAf,CAAmBC,KAAK,iBACvB,QAAC,KAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,QAAA,KAAK,EAAED,KAAK,CAACE,KAHf;AAIE,QAAA,WAAW,EAAEF,KAAK,CAACG;AAJrB,SACOH,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AArDiD","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { Issue } from '../component/issue'\n\nexport default class Issues extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      arr: [],\n      selectedIssues: []\n    }\n    this.getIssueList = this.getIssueList.bind(this)\n  }\n\n  componentDidMount () {\n    window.addEventListener('load', this.getIssueList)\n  }\n\n  async getIssueList () {\n    await axios\n      .get('https://issue-tracker-spring-boot.herokuapp.com/issues')\n      .then(issues => {\n        this.setState({\n          arr: issues.data\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  addIssues = (issueId, checkValue) => {\n    const oldSelectedIssues = this.state.selectedIssues\n    oldSelectedIssues.push(issueId)\n\n    this.setState({\n      selectedIssues: oldSelectedIssues\n    })\n\n    console.log(this.state.selectedIssues)\n    console.log(checkValue)\n    console.log(issueId)\n  }\n\n  render () {\n    return (\n      <article className='row'>\n        {this.state.arr.map(issue => (\n          <Issue\n            key={issue.id}\n            id={issue.id}\n            title={issue.title}\n            description={issue.description}\n          />\n        ))}\n      </article>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}