[{"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/index.js":"1","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/App.js":"2","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/reportWebVitals.js":"3","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/Issues.js":"4","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/createIssue.js":"5","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getIssues.js":"6","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getIssue.js":"7","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/deleteIssue.js":"8","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/editIssue.js":"9","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/nav/Navigation.js":"10","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getLabels.js":"11","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/model/issue/Issue.js":"12","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getFilteredIssues.js":"13","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getSortedIssues.js":"14"},{"size":1020,"mtime":1609725358376,"results":"15","hashOfConfig":"16"},{"size":220,"mtime":1609723352832,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609271935708,"results":"18","hashOfConfig":"16"},{"size":5021,"mtime":1609935626639,"results":"19","hashOfConfig":"16"},{"size":526,"mtime":1609703689525,"results":"20","hashOfConfig":"16"},{"size":174,"mtime":1609922849850,"results":"21","hashOfConfig":"16"},{"size":230,"mtime":1609703715405,"results":"22","hashOfConfig":"16"},{"size":274,"mtime":1609922849850,"results":"23","hashOfConfig":"16"},{"size":517,"mtime":1609703704105,"results":"24","hashOfConfig":"16"},{"size":417,"mtime":1609725309628,"results":"25","hashOfConfig":"16"},{"size":179,"mtime":1609777529104,"results":"26","hashOfConfig":"16"},{"size":4130,"mtime":1610059884289,"results":"27","hashOfConfig":"16"},{"size":1118,"mtime":1610059970861,"results":"28","hashOfConfig":"16"},{"size":835,"mtime":1609884926932,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"r8iyi5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/index.js",[],["62","63"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/App.js",["64"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/reportWebVitals.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/Issues.js",["65"],"import React, { useEffect, useState } from 'react'\nimport {\n  Container,\n  Form,\n  Navbar,\n  Nav,\n  Dropdown,\n  Badge,\n  InputGroup,\n  Button\n} from 'react-bootstrap'\nimport Issue from '../../model/issue/Issue'\nimport { getLabels } from '../../service/getLabels'\n\nimport './scss/issues.scss'\n\nexport default function Issues () {\n  // var _ = require('lodash')\n  let [labels, setItem] = useState([])\n  let [filteredLabels, setFilteredLabels] = useState([])\n  let [filterOfLabel, setLabelFilter] = useState('')\n  let [filterIssue, setIssueFilter] = useState('')\n  let [check, setCheck] = useState(false)\n  let [sort, setSort] = useState('')\n\n  useEffect(() => {\n    getLabels().then(labels => {\n      setItem(labels.data)\n      setFilteredLabels(labels.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    let updatedLabels = []\n    labels.forEach(element =>\n      element.labelName.search(filterOfLabel) !== -1\n        ? updatedLabels.push(element)\n        : null\n    )\n    setFilteredLabels([...updatedLabels])\n  }, [filterOfLabel])\n\n  const handleFilterIssue = e => {\n    setIssueFilter(e.target.value)\n  }\n\n  const handleLabelSelection = e => {\n    setIssueFilter('label:' + e)\n  }\n\n  const handleCheckBox = e => {\n    setCheck(e.target.checked)\n  }\n\n  const sortSelections = [\n    'Newest',\n    'Oldest',\n    'Recently Updated',\n    'Least Recently Updated'\n  ]\n\n  return (\n    <Container className='issue-container'>\n      <Navbar collapseOnSelect expand='lg' bg='dark' variant='dark'>\n        <Form>\n          <Form.Check\n            checked={check}\n            onChange={e => {\n              handleCheckBox(e)\n            }}\n          ></Form.Check>\n          <div className='search-container'>\n            <Form.Control\n              className='search'\n              placeholder='title(default):  description:  label:'\n              onChange={handleFilterIssue.bind(this)}\n              value={filterIssue}\n            ></Form.Control>\n          </div>\n        </Form>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse id='responsive-navbar-nav'>\n          <Nav className='mr-auto'></Nav>\n          <Nav>\n            <Dropdown className='sort-dropdown'>\n              <Dropdown.Toggle id='dropdown-sort' variant='outline-info'>\n                Sort\n              </Dropdown.Toggle>\n              <Dropdown.Menu className='sort-dropdown-container'>\n                {sortSelections.map((s, i) => (\n                  <Dropdown.Item\n                    key={i}\n                    onClick={() => {\n                      setSort(s)\n                    }}\n                  >\n                    {s}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n            <Dropdown className='label-dropdown'>\n              <Dropdown.Toggle id='dropdown-label' variant='outline-info'>\n                Label\n              </Dropdown.Toggle>\n              <Dropdown.Menu className='label-dropdown-container'>\n                <Form>\n                  <InputGroup>\n                    <Form.Control\n                      type='text'\n                      placeholder='type something..'\n                      value={filterOfLabel}\n                      onChange={e => setLabelFilter(e.target.value)}\n                    ></Form.Control>\n                    <InputGroup.Append>\n                      <Button\n                        onClick={() => {\n                          setLabelFilter('')\n                        }}\n                        variant='outline-secondary'\n                      >\n                        <i className='clean-icon'></i>\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Form>\n                <Dropdown.Item\n                  onSelect={() => {\n                    handleLabelSelection('')\n                  }}\n                  onClick={() => {\n                    setLabelFilter('unlabeled')\n                  }}\n                >\n                  unlabeled\n                </Dropdown.Item>\n                {filteredLabels.map(label => {\n                  return (\n                    <Dropdown.Item\n                      onSelect={() => {\n                        handleLabelSelection(label.labelName)\n                      }}\n                      href=''\n                      key={label.id}\n                      onClick={() => {\n                        setLabelFilter(label.labelName)\n                      }}\n                    >\n                      <Badge style={{ backgroundColor: label.labelColor }}>\n                        {label.labelName[0].toUpperCase()}\n                      </Badge>\n                      {label.labelName}\n                    </Dropdown.Item>\n                  )\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Issue issueFilter={filterIssue} checkStatus={check} sortParams={sort} />\n    </Container>\n  )\n}\n","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/createIssue.js",[],["66","67"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getIssues.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getIssue.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/deleteIssue.js",[],["68","69"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/editIssue.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/nav/Navigation.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getLabels.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/model/issue/Issue.js",["70","71","72","73","74"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getFilteredIssues.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getSortedIssues.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":41,"column":6,"nodeType":"85","endLine":41,"endColumn":21,"suggestions":"86"},{"ruleId":"75","replacedBy":"87"},{"ruleId":"77","replacedBy":"88"},{"ruleId":"75","replacedBy":"89"},{"ruleId":"77","replacedBy":"90"},{"ruleId":"79","severity":1,"message":"91","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":19},{"ruleId":"79","severity":1,"message":"92","line":24,"column":9,"nodeType":"81","messageId":"82","endLine":24,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":43,"column":20,"nodeType":"95","messageId":"96","endLine":43,"endColumn":22},{"ruleId":"83","severity":1,"message":"97","line":48,"column":6,"nodeType":"85","endLine":48,"endColumn":19,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"99","line":54,"column":27,"nodeType":"95","messageId":"100","endLine":54,"endColumn":29},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Issues' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'labels'. Either include it or remove the dependency array.","ArrayExpression",["103"],["101"],["102"],["101"],["102"],"'getIssues' is defined but never used.","'handleChanges' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'issues'. Either include it or remove the dependency array.",["104"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [filterOfLabel, labels]",{"range":"109","text":"110"},"Update the dependencies array to be: [checkStatus, issues]",{"range":"111","text":"112"},[1010,1025],"[filterOfLabel, labels]",[1206,1219],"[checkStatus, issues]"]