[{"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/index.js":"1","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/App.js":"2","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/reportWebVitals.js":"3","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/Issues.js":"4","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/createIssue.js":"5","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getIssues.js":"6","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getIssue.js":"7","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/deleteIssue.js":"8","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/editIssue.js":"9","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/nav/Navigation.js":"10","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getLabels.js":"11","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/model/issue/Issue.js":"12","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getFilteredIssues.js":"13","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getSortedIssues.js":"14","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/deleteSelectedIssues.js":"15","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/CreateIssue.js":"16","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/IssueDetail.js":"17","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/addComment.js":"18","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/deleteComment.js":"19","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/custom/httpCustomValues.js":"20","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/login/Login.js":"21","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/history.js":"22"},{"size":844,"mtime":1610379342048,"results":"23","hashOfConfig":"24"},{"size":1984,"mtime":1610381871512,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609271935708,"results":"26","hashOfConfig":"24"},{"size":6206,"mtime":1610383995668,"results":"27","hashOfConfig":"24"},{"size":342,"mtime":1610384015796,"results":"28","hashOfConfig":"24"},{"size":220,"mtime":1610384056244,"results":"29","hashOfConfig":"24"},{"size":217,"mtime":1610384049396,"results":"30","hashOfConfig":"24"},{"size":240,"mtime":1610384025756,"results":"31","hashOfConfig":"24"},{"size":517,"mtime":1610384032948,"results":"32","hashOfConfig":"24"},{"size":796,"mtime":1610301697288,"results":"33","hashOfConfig":"24"},{"size":225,"mtime":1610384059888,"results":"34","hashOfConfig":"24"},{"size":7169,"mtime":1610391899192,"results":"35","hashOfConfig":"24"},{"size":651,"mtime":1610390588032,"results":"36","hashOfConfig":"24"},{"size":882,"mtime":1610384063720,"results":"37","hashOfConfig":"24"},{"size":308,"mtime":1610384037460,"results":"38","hashOfConfig":"24"},{"size":5816,"mtime":1610391668752,"results":"39","hashOfConfig":"24"},{"size":7024,"mtime":1610391821900,"results":"40","hashOfConfig":"24"},{"size":316,"mtime":1610384008308,"results":"41","hashOfConfig":"24"},{"size":300,"mtime":1610384021320,"results":"42","hashOfConfig":"24"},{"size":190,"mtime":1610369868292,"results":"43","hashOfConfig":"24"},{"size":2095,"mtime":1610381769856,"results":"44","hashOfConfig":"24"},{"size":88,"mtime":1610380835484,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"r8iyi5",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/index.js",[],["94","95"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/App.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/reportWebVitals.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/Issues.js",["96"],"import React, { useEffect, useState } from 'react'\nimport {\n  Container,\n  Form,\n  Navbar,\n  Nav,\n  Dropdown,\n  Badge,\n  InputGroup,\n  Button\n} from 'react-bootstrap'\nimport Issue from '../../model/issue/Issue'\nimport { getLabels } from '../../service/getLabels'\n\nimport './scss/issues.scss'\n\nexport default function Issues () {\n  let [labels, setItem] = useState([])\n  let [filteredLabels, setFilteredLabels] = useState([])\n  let [filterOfLabel, setLabelFilter] = useState('')\n  let [filterIssue, setIssueFilter] = useState('')\n  let [check, setCheck] = useState(false)\n  let [sort, setSort] = useState('')\n  let [showDeleteButton, setVisibility] = useState('hidden')\n  let [deleteSelected, setDelete] = useState(false)\n\n  useEffect(() => {\n    getLabels().then(labels => {\n      setItem(labels.data)\n      setFilteredLabels(labels.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    let updatedLabels = []\n    labels.forEach(element =>\n      element.labelName.search(filterOfLabel) !== -1\n        ? updatedLabels.push(element)\n        : null\n    )\n    setFilteredLabels([...updatedLabels])\n  }, [filterOfLabel])\n\n  const handleFilterIssue = e => {\n    setIssueFilter(e.target.value)\n  }\n\n  const handleLabelSelection = e => {\n    setIssueFilter('label:' + e)\n  }\n\n  const handleCheckBox = e => {\n    setCheck(e.target.checked)\n  }\n  const askDelete = (willShow, isDeleted) => {\n    setVisibility(willShow)\n  }\n\n  const sendDelete = () => {\n    if (showDeleteButton === 'visible') {\n      setDelete(true)\n    }\n  }\n\n  const sortSelections = [\n    'Newest',\n    'Oldest',\n    'Recently Updated',\n    'Least Recently Updated'\n  ]\n\n  return (\n    <div className='issues'>\n      <Container className='issue-container'>\n        <Navbar collapseOnSelect expand='lg' bg='dark' variant='dark'>\n          <Form>\n            <Form.Check\n              checked={check}\n              onChange={e => {\n                handleCheckBox(e)\n              }}\n            ></Form.Check>\n            <button\n              type='button'\n              className='delete-all'\n              style={{ visibility: showDeleteButton }}\n              onClick={() => sendDelete()}\n            >\n              <i className='delete-all-icon'></i>\n              <span className='delete-all-text'>{'(delete all)'}</span>\n            </button>\n            <div className='search-container'>\n              <Form.Control\n                className='search'\n                placeholder='title:  description:  label:'\n                onChange={handleFilterIssue.bind(this)}\n                value={filterIssue}\n              ></Form.Control>\n            </div>\n          </Form>\n          <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n          <Navbar.Collapse id='responsive-navbar-nav'>\n            <Nav className='mr-auto'></Nav>\n            <Nav>\n              <Dropdown className='sort-dropdown'>\n                <Dropdown.Toggle id='dropdown-sort' variant='outline-info'>\n                  Sort\n                </Dropdown.Toggle>\n                <Dropdown.Menu className='sort-dropdown-container'>\n                  {sortSelections.map((s, i) => (\n                    <Dropdown.Item\n                      key={i}\n                      onClick={() => {\n                        setSort(s)\n                      }}\n                    >\n                      {s}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n              <Dropdown className='label-dropdown'>\n                <Dropdown.Toggle id='dropdown-label' variant='outline-info'>\n                  Label\n                </Dropdown.Toggle>\n                <Dropdown.Menu className='label-dropdown-container'>\n                  <Form>\n                    <InputGroup>\n                      <Form.Control\n                        type='text'\n                        placeholder='type something..'\n                        value={filterOfLabel}\n                        onChange={e => setLabelFilter(e.target.value)}\n                      ></Form.Control>\n                      <InputGroup.Append>\n                        <Button\n                          onClick={() => {\n                            setLabelFilter('')\n                          }}\n                          variant='outline-secondary'\n                        >\n                          <i className='clean-icon'></i>\n                        </Button>\n                      </InputGroup.Append>\n                    </InputGroup>\n                  </Form>\n                  <Dropdown.Item\n                    onSelect={() => {\n                      handleLabelSelection('')\n                    }}\n                    onClick={() => {\n                      setLabelFilter('unlabeled')\n                    }}\n                  >\n                    unlabeled\n                  </Dropdown.Item>\n                  {filteredLabels.map(label => {\n                    return (\n                      <Dropdown.Item\n                        onSelect={() => {\n                          handleLabelSelection(label.labelName)\n                        }}\n                        href=''\n                        key={label.id}\n                        onClick={() => {\n                          setLabelFilter(label.labelName)\n                        }}\n                      >\n                        <Badge style={{ backgroundColor: label.labelColor }}>\n                          {label.labelName[0].toUpperCase()}\n                        </Badge>\n                        {label.labelName}\n                      </Dropdown.Item>\n                    )\n                  })}\n                </Dropdown.Menu>\n              </Dropdown>\n              <Button\n                href='/issues/new'\n                type='button'\n                className='add-issue-btn'\n                variant='outline-success'\n              >\n                Add Issue\n              </Button>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Issue\n          issueFilter={filterIssue}\n          checkStatus={check}\n          sortParams={sort}\n          isShow={askDelete}\n          deleteSelections={deleteSelected}\n        />\n      </Container>\n    </div>\n  )\n}\n","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/createIssue.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getIssues.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getIssue.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/deleteIssue.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/editIssue.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/nav/Navigation.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getLabels.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/model/issue/Issue.js",["97","98","99","100"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getFilteredIssues.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/getSortedIssues.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/deleteSelectedIssues.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/CreateIssue.js",["101","102"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/issue/IssueDetail.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/addComment.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/deleteComment.js",[],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/custom/httpCustomValues.js",[],["103","104"],"/root/Desktop/kodstar/issue-tracker-2020-2/web/src/component/login/Login.js",["105"],"import React, { useState } from 'react'\nimport { Form, Row, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport history from '../../service/history'\nimport './scss/login.scss'\n\nexport default function Login (props) {\n  let [userName, setUserName] = useState('')\n  let [password, setPassword] = useState('')\n\n  const handleUserName = e => {\n    setUserName(e.target.value)\n  }\n  const handlePassword = e => {\n    setPassword(e.target.value)\n  }\n\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': '*',\n    'Content-Type': 'application/json'\n  }\n\n  const login = async () => {\n    await axios\n      .post(\n        '/login',\n        {\n          username: userName,\n          password: password\n        },\n        { headers: headers }\n      )\n      .then(r => {\n        localStorage.setItem('token', r.headers.authorization)\n        if (r.status === 200) {\n          window.location.reload()\n        }\n      })\n      .catch(e => alert('check your credentials!'))\n  }\n  return (\n    <div className='container-fluid'>\n      <Row>\n        <div className='offset-4 col-4 offset-4 form-container'>\n          <Form onSubmit={() => login()}>\n            <Form.Group controlId='formBasicUserName'>\n              <Form.Control\n                type='text'\n                placeholder='Enter username'\n                value={userName}\n                onChange={e => handleUserName(e)}\n                className='username-input'\n              />\n            </Form.Group>\n            <Form.Group controlId='formBasicPassword'>\n              <Form.Control\n                type='password'\n                placeholder='Password'\n                value={password}\n                onChange={e => handlePassword(e)}\n                className='password-input'\n              />\n            </Form.Group>\n            <Button\n              variant='primary'\n              type='button'\n              onClick={() => login()}\n              block\n            >\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </Row>\n    </div>\n  )\n}\n","/root/Desktop/kodstar/issue-tracker-2020-2/web/src/service/history.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":42,"column":6,"nodeType":"112","endLine":42,"endColumn":21,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":38,"column":26,"nodeType":"116","messageId":"117","endLine":38,"endColumn":28},{"ruleId":"110","severity":1,"message":"118","line":75,"column":6,"nodeType":"112","endLine":75,"endColumn":19,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":90,"column":6,"nodeType":"112","endLine":90,"endColumn":21,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":102,"column":6,"nodeType":"112","endLine":102,"endColumn":24,"suggestions":"123"},{"ruleId":"114","severity":1,"message":"115","line":50,"column":27,"nodeType":"116","messageId":"117","endLine":50,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":75,"column":6,"nodeType":"112","endLine":75,"endColumn":21,"suggestions":"124"},{"ruleId":"106","replacedBy":"125"},{"ruleId":"108","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":15},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'labels'. Either include it or remove the dependency array.","ArrayExpression",["133"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'issues'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has a missing dependency: 'isShow'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'checkedIssues' and 'isShow'. Either include them or remove the dependency array.",["136"],["137"],["131"],["132"],"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"138","fix":"146"},"Update the dependencies array to be: [filterOfLabel, labels]",{"range":"147","text":"148"},"Update the dependencies array to be: [checkStatus, issues]",{"range":"149","text":"150"},"Update the dependencies array to be: [checkedIssues, isShow]",{"range":"151","text":"152"},"Update the dependencies array to be: [checkedIssues, deleteSelections, isShow]",{"range":"153","text":"154"},{"range":"155","text":"148"},[1092,1107],"[filterOfLabel, labels]",[2182,2195],"[checkStatus, issues]",[2561,2576],"[checkedIssues, isShow]",[2872,2890],"[checkedIssues, deleteSelections, isShow]",[2320,2335]]